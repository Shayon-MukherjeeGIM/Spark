<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0818.1843                               -->
<workbook original-version='18.1' source-build='2021.2.2 (20212.21.0818.1843)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='SampleSuperstore (SampleSuperstore)' inline='true' name='federated.0pm38bw18cj18k15mn5cx02l9p2t' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SampleSuperstore' name='excel-direct.1utm9np1028ce419q4nfz1ndm1ne'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ShAyOn/Downloads/GRIP/Sample Superstore.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1utm9np1028ce419q4nfz1ndm1ne' name='SampleSuperstore' table='[SampleSuperstore$]' type='table'>
          <columns gridOrigin='A1:M9995:no:A1:M9995:0' header='yes' outcome='6'>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1utm9np1028ce419q4nfz1ndm1ne' name='SampleSuperstore' table='[SampleSuperstore$]' type='table'>
          <columns gridOrigin='A1:M9995:no:A1:M9995:0' header='yes' outcome='6'>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M9995:no:A1:M9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column caption='City (copy)' datatype='string' name='[City (copy)_1210905366543872001]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <calculation class='tableau' formula='[City]' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country (copy)' datatype='string' name='[Country (copy)_1210905366543855616]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='tableau' formula='[Country]' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column caption='Region (copy)' datatype='string' name='[Region (copy)_1210905366543896578]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Region]' />
      </column>
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column caption='State (copy)' datatype='string' name='[State (copy)_1210905366544076803]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='tableau' formula='[State]' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='SampleSuperstore' datatype='table' name='[__tableau_internal_object_id__].[SampleSuperstore_588FBF27F7E746139C73D70756089D7B]' role='measure' type='quantitative' />
      <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[State (copy)_1210905366544076803]' derivation='None' name='[none:State (copy)_1210905366544076803:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Category)' hidden='true' name='[Action (Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (State (copy),Sub-Category)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:State (copy)_1210905366544076803:nk]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (State,Sub-Category)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:State:nk]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country_Hierarchy'>
          <field>[Country (copy)_1210905366543855616]</field>
          <field>[State (copy)_1210905366544076803]</field>
          <field>[City (copy)_1210905366543872001]</field>
          <field>[Region (copy)_1210905366543896578]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0pm38bw18cj18k15mn5cx02l9p2t].[avg:Sales:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Quantity:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='SampleSuperstore' id='SampleSuperstore_588FBF27F7E746139C73D70756089D7B'>
            <properties context=''>
              <relation connection='excel-direct.1utm9np1028ce419q4nfz1ndm1ne' name='SampleSuperstore' table='[SampleSuperstore$]' type='table'>
                <columns gridOrigin='A1:M9995:no:A1:M9995:0' header='yes' outcome='6'>
                  <column datatype='string' name='Ship Mode' ordinal='0' />
                  <column datatype='string' name='Segment' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='State' ordinal='4' />
                  <column datatype='integer' name='Postal Code' ordinal='5' />
                  <column datatype='string' name='Region' ordinal='6' />
                  <column datatype='string' name='Category' ordinal='7' />
                  <column datatype='string' name='Sub-Category' ordinal='8' />
                  <column datatype='real' name='Sales' ordinal='9' />
                  <column datatype='integer' name='Quantity' ordinal='10' />
                  <column datatype='real' name='Discount' ordinal='11' />
                  <column datatype='real' name='Profit' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter1' name='[Action1_DF3F649D228D40809922CE91CB30C2A4]'>
      <activation type='on-select' />
      <source dashboard='Tables dashboard' type='sheet' worksheet='category_by_sales' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='category_by_Profit,category_by_sales' />
        <param name='special-fields' value='all' />
        <param name='target' value='Tables dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='State_by_Quantity'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore (SampleSuperstore)' name='federated.0pm38bw18cj18k15mn5cx02l9p2t' />
          </datasources>
          <datasource-dependencies datasource='federated.0pm38bw18cj18k15mn5cx02l9p2t'>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column caption='State (copy)' datatype='string' name='[State (copy)_1210905366544076803]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[State]' />
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State (copy)_1210905366544076803]' derivation='None' name='[none:State (copy)_1210905366544076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State (copy)_1210905366544076803:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State (copy)_1210905366544076803:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Alabama&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Arizona&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Arkansas&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Colorado&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Connecticut&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Delaware&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Florida&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Georgia&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Idaho&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Illinois&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Indiana&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Iowa&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Kansas&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Kentucky&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Louisiana&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Maryland&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Massachusetts&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Michigan&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Minnesota&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Mississippi&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Missouri&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Montana&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Nebraska&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Nevada&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;New Jersey&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Ohio&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Oklahoma&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Oregon&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Rhode Island&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;South Carolina&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;South Dakota&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Tennessee&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Utah&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Vermont&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Virginia&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Washington&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Wisconsin&quot;' />
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Wyoming&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State (copy)_1210905366544076803:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;Pennsylvania&quot;</bucket>
              <bucket>&quot;Washington&quot;</bucket>
              <bucket>&quot;Illinois&quot;</bucket>
              <bucket>&quot;Ohio&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;North Carolina&quot;</bucket>
              <bucket>&quot;Michigan&quot;</bucket>
              <bucket>&quot;Virginia&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Colorado&quot;</bucket>
              <bucket>&quot;Tennessee&quot;</bucket>
              <bucket>&quot;Indiana&quot;</bucket>
              <bucket>&quot;Kentucky&quot;</bucket>
              <bucket>&quot;Oregon&quot;</bucket>
              <bucket>&quot;Massachusetts&quot;</bucket>
              <bucket>&quot;Wisconsin&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
              <bucket>&quot;Maryland&quot;</bucket>
              <bucket>&quot;Delaware&quot;</bucket>
              <bucket>&quot;Minnesota&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;Missouri&quot;</bucket>
              <bucket>&quot;Oklahoma&quot;</bucket>
              <bucket>&quot;Arkansas&quot;</bucket>
              <bucket>&quot;Mississippi&quot;</bucket>
              <bucket>&quot;Utah&quot;</bucket>
              <bucket>&quot;Rhode Island&quot;</bucket>
              <bucket>&quot;South Carolina&quot;</bucket>
              <bucket>&quot;Nevada&quot;</bucket>
              <bucket>&quot;Alabama&quot;</bucket>
              <bucket>&quot;Louisiana&quot;</bucket>
              <bucket>&quot;New Mexico&quot;</bucket>
              <bucket>&quot;Nebraska&quot;</bucket>
              <bucket>&quot;New Hampshire&quot;</bucket>
              <bucket>&quot;Iowa&quot;</bucket>
              <bucket>&quot;Kansas&quot;</bucket>
              <bucket>&quot;Idaho&quot;</bucket>
              <bucket>&quot;Montana&quot;</bucket>
              <bucket>&quot;Vermont&quot;</bucket>
              <bucket>&quot;South Dakota&quot;</bucket>
              <bucket>&quot;District of Columbia&quot;</bucket>
              <bucket>&quot;Maine&quot;</bucket>
              <bucket>&quot;North Dakota&quot;</bucket>
              <bucket>&quot;West Virginia&quot;</bucket>
              <bucket>&quot;Wyoming&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State (copy)_1210905366544076803:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Quantity:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2dada</color>
                <color>#f3c3c3</color>
                <color>#f5abab</color>
                <color>#f69393</color>
                <color>#f87c7c</color>
                <color>#f96363</color>
                <color>#fa4b4b</color>
                <color>#fc3232</color>
                <color>#fd1919</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Quantity:qk]' />
              <text column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State (copy)_1210905366544076803:nk]</rows>
        <cols>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Quantity:qk]</cols>
      </table>
      <simple-id uuid='{4CA4B6F3-1760-44BF-A7ED-9C15CB6BE9A5}' />
    </worksheet>
    <worksheet name='State_by_Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore (SampleSuperstore)' name='federated.0pm38bw18cj18k15mn5cx02l9p2t' />
          </datasources>
          <datasource-dependencies datasource='federated.0pm38bw18cj18k15mn5cx02l9p2t'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' />
              <text column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]</rows>
        <cols>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{0B3CA438-FA6D-4E85-BAFE-058E0211410A}' />
    </worksheet>
    <worksheet name='State_subcategory_discount'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore (SampleSuperstore)' name='federated.0pm38bw18cj18k15mn5cx02l9p2t' />
          </datasources>
          <datasource-dependencies datasource='federated.0pm38bw18cj18k15mn5cx02l9p2t'>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[Exclusions (State,Sub-Category)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:State:nk]' />
                <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Art&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Bookcases&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Envelopes&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Labels&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Machines&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Storage&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Supplies&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]</column>
            <column>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[Exclusions (State,Sub-Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#decee5</color>
                <color>#cbaeda</color>
                <color>#ba90ce</color>
                <color>#a975c3</color>
                <color>#995cb8</color>
                <color>#8a45ac</color>
                <color>#7b30a1</color>
                <color>#6e1d95</color>
                <color>#610d8a</color>
                <color>#55007f</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]' />
              <text column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]</rows>
        <cols>([federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk] / [federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{0D6E890D-F71A-4D66-8547-FCDD6CA9D55E}' />
    </worksheet>
    <worksheet name='State_subcategory_profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore (SampleSuperstore)' name='federated.0pm38bw18cj18k15mn5cx02l9p2t' />
          </datasources>
          <datasource-dependencies datasource='federated.0pm38bw18cj18k15mn5cx02l9p2t'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column caption='State (copy)' datatype='string' name='[State (copy)_1210905366544076803]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[State]' />
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[State (copy)_1210905366544076803]' derivation='None' name='[none:State (copy)_1210905366544076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[Exclusions (State (copy),Sub-Category)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:State (copy)_1210905366544076803:nk]' />
                <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:State (copy)_1210905366544076803:nk]' member='&quot;Texas&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Art&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Bookcases&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Chairs&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Envelopes&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Furnishings&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Labels&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Machines&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Storage&quot;' />
                  <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Supplies&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]</column>
            <column>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[Exclusions (State (copy),Sub-Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' />
              <text column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]</rows>
        <cols>([federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State (copy)_1210905366544076803:nk] / [federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{0B8F60DE-246A-40F4-904C-A49C4517A821}' />
    </worksheet>
    <worksheet name='SubCategory_bysales'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore (SampleSuperstore)' name='federated.0pm38bw18cj18k15mn5cx02l9p2t' />
          </datasources>
          <datasource-dependencies datasource='federated.0pm38bw18cj18k15mn5cx02l9p2t'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[Action (Category)]'>
            <groupfilter function='member' level='[Category]' member='&quot;Furniture&quot;' user:ui-action-filter='[Action1_DF3F649D228D40809922CE91CB30C2A4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e9d2d2</color>
                <color>#e2b5b5</color>
                <color>#db9999</color>
                <color>#d47f7f</color>
                <color>#cd6666</color>
                <color>#c64f4f</color>
                <color>#bf3939</color>
                <color>#b82424</color>
                <color>#b11111</color>
                <color>#aa0000</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' />
              <text column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]</rows>
        <cols>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{D6FD4045-B5BD-4141-AE47-49B5F234663E}' />
    </worksheet>
    <worksheet name='Subcategory_by_Discount'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore (SampleSuperstore)' name='federated.0pm38bw18cj18k15mn5cx02l9p2t' />
          </datasources>
          <datasource-dependencies datasource='federated.0pm38bw18cj18k15mn5cx02l9p2t'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[Action (Category)]'>
            <groupfilter function='member' level='[Category]' member='&quot;Furniture&quot;' user:ui-action-filter='[Action1_DF3F649D228D40809922CE91CB30C2A4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#cae1ca</color>
                <color>#a7d1a7</color>
                <color>#87c287</color>
                <color>#6bb26b</color>
                <color>#51a351</color>
                <color>#3a933a</color>
                <color>#278327</color>
                <color>#177417</color>
                <color>#0a640a</color>
                <color>#005500</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]' />
              <text column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]</rows>
        <cols>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]</cols>
      </table>
      <simple-id uuid='{7CA211C6-4186-43BF-9190-5DE20AEAA45D}' />
    </worksheet>
    <worksheet name='category_by_Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore (SampleSuperstore)' name='federated.0pm38bw18cj18k15mn5cx02l9p2t' />
          </datasources>
          <datasource-dependencies datasource='federated.0pm38bw18cj18k15mn5cx02l9p2t'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]' value='159' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' />
              <text column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]</rows>
        <cols>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]</cols>
      </table>
      <simple-id uuid='{694BF85D-9472-44A2-8F44-F8C53245A777}' />
    </worksheet>
    <worksheet name='category_by_sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore (SampleSuperstore)' name='federated.0pm38bw18cj18k15mn5cx02l9p2t' />
          </datasources>
          <datasource-dependencies datasource='federated.0pm38bw18cj18k15mn5cx02l9p2t'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]' value='159' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e6ddd2</color>
                <color>#dbc9b6</color>
                <color>#d0b79b</color>
                <color>#c5a682</color>
                <color>#ba956b</color>
                <color>#af8656</color>
                <color>#a47743</color>
                <color>#996932</color>
                <color>#8e5c22</color>
                <color>#835015</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]</rows>
        <cols>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]</cols>
      </table>
      <simple-id uuid='{1060E29B-600B-406A-A599-5E9803DD8936}' />
    </worksheet>
    <worksheet name='state_by_Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore (SampleSuperstore)' name='federated.0pm38bw18cj18k15mn5cx02l9p2t' />
          </datasources>
          <datasource-dependencies datasource='federated.0pm38bw18cj18k15mn5cx02l9p2t'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' />
              <text column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' />
              <lod column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]</rows>
        <cols>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{9CA098E6-AA30-4121-B123-16A7383BF37F}' />
    </worksheet>
    <worksheet name='subcategory_by_Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore (SampleSuperstore)' name='federated.0pm38bw18cj18k15mn5cx02l9p2t' />
          </datasources>
          <datasource-dependencies datasource='federated.0pm38bw18cj18k15mn5cx02l9p2t'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[Action (Category)]'>
            <groupfilter function='member' level='[Category]' member='&quot;Furniture&quot;' user:ui-action-filter='[Action1_DF3F649D228D40809922CE91CB30C2A4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' />
              <text column='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]</rows>
        <cols>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{4C4A764B-827A-4F81-A527-A13B99E71ADF}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Tables dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='27250' id='3' name='category_by_sales' w='98400' x='800' y='71750'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='38625' id='5' name='category_by_Profit' w='60800' x='38400' y='33125'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='32125' id='6' name='SubCategory_bysales' w='37600' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='38625' id='7' name='subcategory_by_Profit' w='37600' x='800' y='33125'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='32125' id='12' name='Subcategory_by_Discount' w='60800' x='38400' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='15' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='249' h='32125' id='6' is-fixed='true' name='SubCategory_bysales' w='37600' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='249' h='32125' id='12' is-fixed='true' name='Subcategory_by_Discount' w='60800' x='38400' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38625' id='7' is-fixed='true' name='subcategory_by_Profit' w='37600' x='800' y='33125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38625' id='5' is-fixed='true' name='category_by_Profit' w='60800' x='38400' y='33125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='210' h='27250' id='3' is-fixed='true' name='category_by_sales' w='98400' x='800' y='71750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{AEE11E59-6156-4B58-B897-FADC14046996}' />
    </dashboard>
    <dashboard name='Texas dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='57625' id='3' name='State_subcategory_profit' w='37900' x='61300' y='41375'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='24500' id='5' name='State_subcategory_discount' w='60500' x='800' y='74500'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='40375' id='6' name='State_by_Quantity' w='60500' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='40375' id='7' name='state_by_Profit' w='37900' x='61300' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='33125' id='8' name='State_by_Sales' w='60500' x='800' y='41375'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='12' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='11' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='40375' id='6' is-fixed='true' name='State_by_Quantity' w='60500' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40375' id='7' is-fixed='true' name='state_by_Profit' w='37900' x='61300' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='257' h='33125' id='8' is-fixed='true' name='State_by_Sales' w='60500' x='800' y='41375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57625' id='3' is-fixed='true' name='State_subcategory_profit' w='37900' x='61300' y='41375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24500' id='5' is-fixed='true' name='State_subcategory_discount' w='60500' x='800' y='74500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FF4A812D-5254-43F9-9BD8-F72CAFA2D91E}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='category_by_sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]</field>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Segment:nk]</field>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC05F0DB-367C-4E29-867A-09D18C8DBC83}' />
    </window>
    <window class='worksheet' name='category_by_Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{30BBF23C-9EBD-46C2-A87B-440B164CD2F6}' />
    </window>
    <window class='worksheet' name='SubCategory_bysales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]</field>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE33A98B-531E-4714-948E-76B81A670FF1}' />
    </window>
    <window class='worksheet' name='subcategory_by_Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]</field>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0B7950B-D29C-483C-A4FA-B54048AAFB3D}' />
    </window>
    <window class='worksheet' name='Subcategory_by_Discount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E3402A04-B7CD-48CC-B851-9A6D07F24332}' />
    </window>
    <window class='dashboard' name='Tables dashboard'>
      <viewpoints>
        <viewpoint name='SubCategory_bysales' />
        <viewpoint name='Subcategory_by_Discount' />
        <viewpoint name='category_by_Profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='category_by_sales'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]</field>
                    <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Furniture&quot;</value>
                  <value>674.35199999999998</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Category:nk]</field>
                    <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Furniture&quot;</value>
                  <value>674.35199999999998</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='subcategory_by_Profit'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{E18460FD-8D4E-4493-A266-B49C4EABC51B}' />
    </window>
    <window class='worksheet' name='State_by_Quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Quantity:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Country (copy)_1210905366543855616:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D19EB895-2321-4EDB-BDCB-331E92650F6E}' />
    </window>
    <window class='worksheet' name='state_by_Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE623F5D-D5A0-40C3-B1E1-49A8C96D3C79}' />
    </window>
    <window class='worksheet' name='State_by_Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02B3D167-51E7-4867-A2E4-78BEFB85366E}' />
    </window>
    <window class='worksheet' name='State_subcategory_profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State (copy)_1210905366544076803:nk]</field>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]</field>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9B66F690-4F5E-40E7-9E79-A8388C84FEC3}' />
    </window>
    <window class='worksheet' name='State_subcategory_discount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Discount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]</field>
            <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9BB827E7-BBD8-4E05-8992-50AE4505425D}' />
    </window>
    <window class='dashboard' maximized='true' name='Texas dashboard'>
      <viewpoints>
        <viewpoint name='State_by_Quantity'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='State_by_Sales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='State_subcategory_discount'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='State_subcategory_profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='state_by_Profit'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[none:State:nk]</field>
                    <field>[federated.0pm38bw18cj18k15mn5cx02l9p2t].[sum:Profit:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;West Virginia&quot;</value>
                  <value>185.92160000000001</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{49B7A0EB-373B-4D5C-94A0-1F751461C080}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='State_by_Quantity' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='State_by_Sales' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='State_subcategory_discount' width='192'>
      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
      sDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0
      CYCwtE0H4ObEIBevjINhMD3SR9dHJwjFUkwOXuLEqdPMx9JmjFOILbH5ukAV1SxPhDG0NAtJ
      G899pYOBywPoufkc3l/NpN9PYUP1bY8xDANzS/Ia8n0B4oFsOgDZOTkoyq2V2u6wY7M7IRPH
      nlWC3e5A16MYhoGu6+i6TiZzqyCWpplXGOuz7QpxPzYdgKGLH9N/LYSRlY0RDfLh8Unq255k
      ebKPk9fT7Nl/6LbCWHa7HUVRsNvNK4ylqjYcDodp7Qnr2PRa2NLxHC0dn95oqKTt778of26z
      TQux5eQokLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJ
      gLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwtLt+KP7nP/85R48epb29/Z4NGXqGy+fP
      EImnKW9oIxUYZW45QfPBp6gucpk2YCHMdNcApFIpNE2jt7eXAwcO3LsxRw5FRR5syWWMglqe
      f8zL6GwQvaB2rTaQpmkAZDKaOc8AqQskHtyGyqL89Kc/5be//S26rpOVlbXuMoauo6kOykt8
      zM4GIbcIXdcBBUVRAFAUBVW9Nev6+/9mUD/TrhD3Y8N1gc6dO0dvby8/+tGP1v29otpw6AmG
      R8apaGyDhQnOXLxBW8dhFEW545+qKqY9CSQA4gHdNQDf+9738Hq9/OxnP8Pn87Fnz54vXFZR
      bbR2PPWPO6p8NJk2TCG2xl0DUFpaCkBdXR0Abrd7ywckxHbawLwhzeLiChhpFiMrWz8iIbbR
      PfYBMoxcPsWf/zpJZ2cZc/FSvv7fntiekQmxDe4RAAVvYRmNjRqFJdXsq2/YnlEJsU3uMQWy
      UV5TR2R2lMEr/QyNzWzPqITYJhs4DKricLppamqi0Ofd+hEJsY02EAAHTz5zmFVNx2Hil1oI
      8TDY0FGgyeFhBj45xaneya0fkRDbaAN/0m3kFxWhusAfS279iITYRhsIgJ3yqjK0sJtjT7Vu
      /YiE2EYbmAIl6Dr+N2IL1znx8fDWj0iIbbSBACgYWppkMglywZl4xGzoKNBXX38DbAqq6tz6
      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
      zqLd7EEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='State_subcategory_profit' width='192'>
      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
      TT9yAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='159' name='SubCategory_bysales' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='159' name='Subcategory_by_Discount' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tables dashboard' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Texas dashboard' width='192'>
      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
      9CR+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='category_by_Profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='category_by_sales' width='192'>
      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
      b0uA/wW0fBAceBOBagAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='state_by_Profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='159' name='subcategory_by_Profit' width='192'>
      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
      D2fw/wAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
